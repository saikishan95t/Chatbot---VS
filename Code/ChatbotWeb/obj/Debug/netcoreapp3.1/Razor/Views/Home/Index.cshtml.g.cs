#pragma checksum "E:\Masters\Capstone\Chatbot - VS\Code\ChatbotWeb\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "87f2845716c697aad576c4866d5b47f9d7a2ec80"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Masters\Capstone\Chatbot - VS\Code\ChatbotWeb\Views\_ViewImports.cshtml"
using ChabotWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Masters\Capstone\Chatbot - VS\Code\ChatbotWeb\Views\_ViewImports.cshtml"
using ChabotWeb.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"87f2845716c697aad576c4866d5b47f9d7a2ec80", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"205924299bd1d19ad94d89e58d3167737e1b6deb", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\Masters\Capstone\Chatbot - VS\Code\ChatbotWeb\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div>
    <h1 class=""display-4"">iPPi Chatbot</h1>
    <p>
        The previous decade saw the emergence of chatbots and has led all the tech giants on a race
        into finding and developing their own versions of chatbots and virtual assistants. Chatbots are
        becoming increasingly popular and businesses are seemingly gaining an edge by employing
        chatbots on any or all of their client-facing platforms. Apart from providing a competitive
        advantage, chatbots have automated a lot of existing processes and facilitated the means for
        new processes in areas like marketing and customer-relations.
    </p>
    <p>
        This project intends to build a simple chatbot, on top of the existing iPPi platform, owned by
        4Property, Ireland. The major purpose of this chatbot is to enable the application to manage
        and clean data obtained by crawling and parsing through government and other public websites.
        We intend to collect the missing data and enable");
            WriteLiteral(@" correction of erroneous data by obtaining it
        from the user accessing the application by means of this chatbot. Apart from this, we also plan
        to use the bot to perform tasks like answering simple user queries, enabling a fastened property
        valuation process and feedback collection.
    </p>
    <p>
        This application aims to capture all the scenarios as displayed in the navigation bar, and provide 
        the user with a clear picture of the conversation and the interaction involved in each of the scenario.
        Proceed through each bar to clearly understand the context of conversation for each of the scenarios.
    </p>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
